#!/bin/sh

timestamp=`date +%Y%m%d`

profile[0]=development
profile[1]=production
profile[2]=customer
echo "Which profile?"
echo ""
echo "0) Development"
echo "1) Production"
echo "2) Customer"
read readprofile
getprofile=${profile[readprofile]}
echo ""
region[0]=us-west-2
region[1]=us-east-1
region[2]=us-west-1
region[3]=eu-west-1
region[4]=eu-central-1
region[5]=ap-southeast-1
region[6]=ap-southeast-2
region[7]=ap-northeast-1
region[8]=sa-east-1
echo "Which region?"
echo ""
echo "0) Oregon"
echo "1) N. Virginia"
echo "2) N. California"
echo "3) Ireland"
echo "4) Frankfurt"
echo "5) Singapore"
echo "6) Sydney"
echo "7) Tokyo"
echo "8) Sao Paulo"
read readregion
getregion=${region[readregion]}
echo ""
echo "Include Whitehat Sentinel IPs in source IP list?"
echo ""
echo "0) No"
echo "1) Yes"
read readwhitehat

echo ""
echo "Looking for scanners in ${getregion}..."

# Query specific region in a profile for VPCs with a Nessus scanner.
# Create a temporary file to use as a source of which VPCs to query.
aws ec2 describe-instances --region ${getregion} --profile ${getprofile} --filters "Name=instance-type,Values=t2.micro,t2.small,*.medium,*large" "Name=tag:Nessus,Values=true" --query Reservations[*].Instances[*].[VpcId] --output text > ${getprofile}_${getregion}_vpcs.txt

echo "Set directory name..."
directory="${getprofile}_${timestamp}"

if [ ! -d "$directory" ]; then
  echo "Making directory to save results..."
  mkdir ${directory}
fi

echo "Creating source IP file..."
echo "12.232.188.64/27" >> ${directory}/${getprofile}_${getregion}_source_ips.txt
echo "50.194.233.128/28" >> ${directory}/${getprofile}_${getregion}_source_ips.txt
# Insert all the source scanner IPs into a file to use as a "source" list.

if [ "$readwhitehat" -eq "1" ]; then
  declare -a whitehat=("63.128.163.0/27" "63.128.163.8" "12.248.108.200/30" "67.207.113.224/28" "64.244.165.4/30" "38.122.74.16/30")

  for i in "${whitehat[@]}"
  do
    echo "$i" >> ${directory}/${getprofile}_${getregion}_source_ips.txt
    # or do whatever with individual element of the array
  done
fi

aws ec2 describe-instances --region ${getregion} --profile ${getprofile} --filters "Name=instance-type,Values=t2.micro,t2.small,*.medium,*large" "Name=tag:Nessus,Values=true" --query Reservations[*].Instances[*].[PrivateIpAddress] --output text >> ${directory}/${getprofile}_${getregion}_source_ips.txt
aws ec2 describe-instances --region ${getregion} --profile ${getprofile} --filters "Name=instance-type,Values=t2.micro,t2.small,*.medium,*large" "Name=tag:Nessus,Values=true" --query Reservations[*].Instances[*].[PublicIpAddress] --output text | grep -v "None" >> ${directory}/${getprofile}_${getregion}_source_ips.txt

echo "Generating destination IP information per VPC..."
while read v; do
  # The first three queries concat the info needed for the AWS
  # penetration test/vulnerability scan approval form into large files
  # encompassing the whole region for a profile.

  # Assemble private IPs for AWS approval form.
  aws ec2 describe-instances --region ${getregion} --profile ${getprofile} --filters "Name=instance-type,Values=t2.micro,t2.small,*.medium,*large" "Name=vpc-id,Values=${v}" "Name=instance-state-name,Values=running" --query Reservations[*].Instances[*].[PrivateIpAddress] --output text >> ${directory}/${getprofile}_${getregion}_destination_ips.txt
  # Concat public IPs to the same file for the approval request.
  aws ec2 describe-instances --region ${getregion} --profile ${getprofile} --filters "Name=instance-type,Values=t2.micro,t2.small,*.medium,*large" "Name=vpc-id,Values=${v}" "Name=instance-state-name,Values=running" --query Reservations[*].Instances[*].[PublicIpAddress] --output text | grep -v "None" >> ${directory}/${getprofile}_${getregion}_destination_ips.txt
  # AWS also wants the instance IDs involved in the vulnerability scan.
  aws ec2 describe-instances --region ${getregion} --profile ${getprofile} --filters "Name=instance-type,Values=t2.micro,t2.small,*.medium,*large" "Name=vpc-id,Values=${v}" "Name=instance-state-name,Values=running" --query Reservations[*].Instances[*].[InstanceId] --output text >> ${directory}/${getprofile}_${getregion}_target_instance_ids.txt

  # Create a file for tracking what VPCs were included in the AWS request
  # and the private VPC subnet IPs that will be be whitelisted to be scanned in
  # Tenable SecurityCenter scan zones.

  # The first query creates a descriptive header with the name of the VPC.
  aws ec2 describe-vpcs --region ${getregion} --profile ${getprofile} --vpc-ids ${v} --filters "Name=tag-key,Values=Name" --output text | grep "Name" > ${directory}/${getprofile}_${getregion}_${v}_ips.txt
  # Query and add the VPC subnet private IPs to use in the scanner whitelist.
  aws ec2 describe-instances --region ${getregion} --profile ${getprofile} --filters "Name=instance-type,Values=t2.micro,t2.small,*.medium,*large" "Name=vpc-id,Values=${v}" "Name=instance-state-name,Values=running" --query Reservations[*].Instances[*].[PrivateIpAddress] --output text >> ${directory}/${getprofile}_${getregion}_${v}_ips.txt
done <${getprofile}_${getregion}_vpcs.txt

echo "Moving VPC list temporary file..."
rm ${getprofile}_${getregion}_vpcs.txt
echo "Done!"
echo "Check this folder for the output you need in various txt files."
