@echo off

REM set timestamp=%date:~10,4%%date:~4,2%%date:~7,2%_%time:~0,2%%time:~3,2%%time:~6,2%
set timestamp=%date:~10,4%%date:~4,2%%date:~7,2%

set profile[0]=development
set profile[1]=production
set profile[2]=customer
echo Which profile?
echo.
echo 0) Development
echo 1) Production
echo 2) Customer
set /p pick=
call array.bat getitem profile %pick% getprofile
echo.
set region[0]=us-west-2
set region[1]=us-east-1
set region[2]=us-west-1
set region[3]=eu-west-1
set region[4]=eu-central-1
set region[5]=ap-southeast-1
set region[6]=ap-southeast-2
set region[7]=ap-northeast-1
set region[8]=sa-east-1
echo Which region?
echo.
echo 0) Oregon
echo 1) N. Virginia
echo 2) N. California
echo 3) Ireland
echo 4) Frankfurt
echo 5) Singapore
echo 6) Sydney
echo 7) Tokyo
echo 8) Sao Paulo
set /p pick=
call array.bat getitem region %pick% getregion
echo.
set whitehat[0]=
set whitehat[1]=63.128.163.0/27 63.128.163.8 12.248.108.200/30 67.207.113.224/28 64.244.165.4/30 38.122.74.16/30
echo Include Whitehat Sentinel IPs in source IP list?
echo.
echo 0) No
echo 1) Yes
set /p pick=
call array.bat getitem whitehat %pick% getwhitehat

echo.
echo Looking for scanners in %getregion%...

REM Query specific region in a profile for VPCs with a Nessus scanner.
REM Create a temporary file to use as a source of which VPCs to query.
aws ec2 describe-instances --region %getregion% --profile %getprofile% --filters "Name=instance-type,Values=t2.micro,t2.small,*.medium,*large" "Name=tag:Nessus,Values=true" --query Reservations[*].Instances[*].[VpcId] --output text > %getprofile%_%getregion%_vpcs.txt

echo Set directory name...
set directory=%getprofile%_%timestamp%

echo Making directory to save results...
mkdir %directory%

echo Creating source IP file...
echo 12.232.188.64/27 >> %directory%/%getprofile%_%getregion%_source_ips.txt
echo 50.194.233.128/28 >> %directory%/%getprofile%_%getregion%_source_ips.txt
REM Insert all the source scanner IPs into a file to use as a "source" list.
(for %%i in (%getwhitehat%) do (
   echo %%i
   echo/
)) >> %directory%/%getprofile%_%getregion%_source_ips.txt
aws ec2 describe-instances --region %getregion% --profile %getprofile% --filters "Name=instance-type,Values=t2.micro,t2.small,*.medium,*large" "Name=tag:Nessus,Values=true" --query Reservations[*].Instances[*].[PrivateIpAddress] --output text >> %directory%/%getprofile%_%getregion%_source_ips.txt
aws ec2 describe-instances --region %getregion% --profile %getprofile% --filters "Name=instance-type,Values=t2.micro,t2.small,*.medium,*large" "Name=tag:Nessus,Values=true" --query Reservations[*].Instances[*].[PublicIpAddress] --output text | find /V "None" >> %directory%/%getprofile%_%getregion%_source_ips.txt

echo Generating destination IP information per VPC...
for /f %%v in (%getprofile%_%getregion%_vpcs.txt) do (
  REM The first three queries concat the info needed for the AWS
  REM penetration test/vulnerability scan approval form into large files
  REM encompassing the whole region for a profile.

  REM Assemble private IPs for AWS approval form.
  aws ec2 describe-instances --region %getregion% --profile %getprofile% --filters "Name=instance-type,Values=t2.micro,t2.small,*.medium,*large" "Name=vpc-id,Values=%%v" "Name=instance-state-name,Values=running" --query Reservations[*].Instances[*].[PrivateIpAddress] --output text >> %directory%/%getprofile%_%getregion%_destination_ips.txt
  REM Concat public IPs to the same file for the approval request.
  aws ec2 describe-instances --region %getregion% --profile %getprofile% --filters "Name=instance-type,Values=t2.micro,t2.small,*.medium,*large" "Name=vpc-id,Values=%%v" "Name=instance-state-name,Values=running" --query Reservations[*].Instances[*].[PublicIpAddress] --output text | find /V "None" >> %directory%/%getprofile%_%getregion%_destination_ips.txt
  REM AWS also wants the instance IDs involved in the vulnerability scan.
  aws ec2 describe-instances --region %getregion% --profile %getprofile% --filters "Name=instance-type,Values=t2.micro,t2.small,*.medium,*large" "Name=vpc-id,Values=%%v" "Name=instance-state-name,Values=running" --query Reservations[*].Instances[*].[InstanceId] --output text >> %directory%/%getprofile%_%getregion%_target_instance_ids.txt

  REM Create a file for tracking what VPCs were included in the AWS request
  REM and the private VPC subnet IPs that will be be whitelisted to be scanned in
  REM Tenable SecurityCenter scan zones.

  REM The first query creates a descriptive header with the name of the VPC.
  aws ec2 describe-vpcs --region %getregion% --profile %getprofile% --vpc-ids %%v --filters "Name=tag-key,Values=Name" --output text | find "Name" > %directory%/%getprofile%_%getregion%_%%v_ips.txt
  REM Query and add the VPC subnet private IPs to use in the scanner whitelist.
  aws ec2 describe-instances --region %getregion% --profile %getprofile% --filters "Name=instance-type,Values=t2.micro,t2.small,*.medium,*large" "Name=vpc-id,Values=%%v" "Name=instance-state-name,Values=running" --query Reservations[*].Instances[*].[PrivateIpAddress] --output text >> %directory%/%getprofile%_%getregion%_%%v_ips.txt
)
echo Removing VPC list temporary file...
del %getprofile%_%getregion%_vpcs.txt
echo.
echo Done!
echo Check this folder for the output you need in various txt files.
echo Press enter to quit.
pause >nul
exit
